@startuml
entity "Private Individual's Sensor" as PIS
actor "System Administrator" as SA
participant "System Backend" as SB
database "datas.csv" as MC

' Data Contribution and Usage
PIS -> SB: Sends air quality data at regular intervals
SB -> MC: Processes and stores data in datas.csv

' Data Analysis for Reliability (System Admin Interaction)
SA -> SB: Requests a reliability check on data from Private Individual's Sensor
SB -> MC: Retrieves and analyzes data
SB -> SB: Assesses data and determines reliability
SB -> SA: Notifies of action taken
SB -> SA: Provide a list containing potentially unreliable sensors
SA -> SB: Provide a list containing identified unreliable sensors, and block their future data usage
@enduml






@startuml
database "cleaners.csv" as CC
entity "AirWatcher Analysis System" as AWS
actor "Government Agency" as GA

' Monitoring and analyzing the impact of the air cleaner
GA -> AWS: Requests air quality analysis around cleaner
AWS -> CC: Retrieves operational data
AWS -> AWS: Analyzes air quality improvement
AWS -> GA: Reports on radius of cleaned zone and air quality improvement
@enduml






@startuml
actor "System Administrator" as U
participant "System Backend" as SB
database "datas.csv" as MC
entity "AirWatcher Analysis System" as SAM


' User selects a sensor and specifies the time period for comparison
U -> SB: Selects reference sensor and specifies time period
SB -> MC: Retrieves data for selected sensor and period

' System computes similarity scores for all other sensors
SB -> SAM: Choose other sensors in terms of similarity to the selected sensor
SAM -> MC: Retrieves data for all sensors during the specified period
SAM -> SAM: Computes similarity scores based on air quality data
SAM -> SB: Returns ranked list of sensors based on similarity

' Display the results to the user
SB -> U: Display similarity rankings
@enduml

